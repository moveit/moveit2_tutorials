name: Build Tutorial Images

on:
  workflow_call:

jobs:
  build-images:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [humble, rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GH_IMAGE: ghcr.io/ros-planning/moveit2_tutorials:${{ matrix.ROS_DISTRO }}
      DH_IMAGE: moveit/moveit2_tutorials:${{ matrix.ROS_DISTRO }}
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'ros-planning/moveit2_tutorials') }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Github Container Registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Login to DockerHub
      #   if: env.PUSH == 'true'
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Hello World
        uses: docker/build-push-action@v3
        with:
          file: .docker/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: hello_world_image
          push: ${{ env.PUSH }}
          no-cache: false
          tags: |
            ${{ env.GH_IMAGE }}-hello-world
#            ${{ env.DH_IMAGE }}-hello-world
      - name: Build and Push Planning Around Objects
        uses: docker/build-push-action@v3
        with:
          file: .docker/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: planning_around_objects_image
          push: ${{ env.PUSH }}
          no-cache: false
          tags: |
            ${{ env.GH_IMAGE }}-planning
#            ${{ env.DH_IMAGE }}-planning
      - name: Build and Push MTC (All)
        uses: docker/build-push-action@v3
        with:
          file: .docker/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: pick_and_place_image
          push: ${{ env.PUSH }}
          no-cache: false
          tags: |
            ${{ env.GH_IMAGE }}-pick-and-place
            ${{ env.GH_IMAGE }}-all
#            ${{ env.DH_IMAGE }}-pick-and-place
#            ${{ env.DH_IMAGE }}-all
