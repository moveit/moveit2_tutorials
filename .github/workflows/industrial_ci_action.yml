# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

# We don't have tests in tutorial repos so skipping it
name: Build
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          - IMAGE: "foxy-source"
            CCOV: false
    env:
      DOCKER_IMAGE: moveit/moveit2:${{ matrix.env.IMAGE }}
      UPSTREAM_WORKSPACE: moveit2_tutorials.repos
      # Build moveit2 itself before upstream
      BEFORE_SETUP_UPSTREAM_WORKSPACE: |
        cd ~/ws_moveit/ && apt-get update && apt-get install -y build-essential \
        cmake \
        git \
        libbullet-dev \
        python3-colcon-common-extensions \
        python3-flake8 \
        python3-pip \
        python3-pytest-cov \
        python3-rosdep \
        python3-setuptools \
        python3-vcstool \
        wget \
        clang-format-10 && \
        python3 -m pip install -U \
        argcomplete \
        flake8-blind-except \
        flake8-builtins \
        flake8-class-newline \
        flake8-comprehensions \
        flake8-deprecated \
        flake8-docstrings \
        flake8-import-order \
        flake8-quotes \
        pytest-repeat \
        pytest-rerunfailures \
        pytest && \
        set +u && source /opt/ros/foxy/setup.bash && \
        colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release && set -u
      AFTER_SETUP_UPSTREAM_WORKSPACE: "vcs pull $BASEDIR/upstream_ws/src"
      AFTER_SETUP_UPSTREAM_WORKSPACE_EMBED: "set +u && source ~/ws_moveit/install/setup.bash && set - u"
      AFTER_RUN_TARGET_TEST: ${{ matrix.env.CCOV && './.ci.prepare_codecov' || '' }}
      TARGET_CMAKE_ARGS: >
        -DCMAKE_BUILD_TYPE=${{ matrix.env.CCOV && 'RelWithDebInfo' || 'Release'}}
        ${{ matrix.env.CCOV && '-DCMAKE_CXX_FLAGS="--coverage" --no-warn-unused-cli' || '' }}
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
      BASEDIR: ${{ github.workspace }}/.work
      CACHE_PREFIX: "${{ matrix.env.IMAGE }}${{ matrix.env.CCOV && '-ccov' || '' }}"
      CLANG_TIDY_BASE_REF: "${{ github.base_ref || github.ref }}"

    name: "${{ matrix.env.IMAGE }}${{ contains(matrix.env.IKFAST_TEST, 'ikfast') && ' + ikfast' || ''}}${{ matrix.env.CCOV && ' + ccov' || ''}}${{ matrix.env.CLANG_TIDY && ' + clang-tidy' || '' }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Free up disk space"
        if: ${{ matrix.env.CCOV }}
        run: |
          sudo apt-get -qq purge build-essential ghc*
          sudo apt-get clean
          # cleanup docker images not used by us
          docker system prune -af
          # shift ccache folder to /mnt on a separate disk
          sudo mkdir /mnt/ccache
          mkdir ${{ env.CCACHE_DIR }}
          sudo mount --bind ${{ env.CCACHE_DIR }} /mnt/ccache
          # free up a lot of stuff from /usr/local
          sudo rm -rf /usr/local/*
          df -h
      - uses: actions/checkout@v2
      - name: cache upstream_ws
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.BASEDIR }}/upstream_ws
          key: upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('moveit2.repos') }}-${{ github.run_id }}
          restore-keys: |
            upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('moveit2.repos') }}
      # The target directory cache doesn't include the source directory because
      # that comes from the checkout.  See "prepare target_ws for cache" task below
      - name: cache target_ws
        if: ${{ ! matrix.env.CCOV }}
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.BASEDIR }}/target_ws
          key: target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}-${{ github.run_id }}
          restore-keys: |
            target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}
      - name: cache ccache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}
            ccache-${{ env.CACHE_PREFIX }}
      # https://github.com/ros-industrial/industrial_ci/pull/655
      - name: industrial_ci
        uses: "ros-industrial/industrial_ci@master"
        env: ${{ matrix.env }}
      - name: upload test artifacts (on failure)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: ${{ env.BASEDIR }}/target_ws/**/test_results/**/*.xml
      - name: upload codecov report
        uses: codecov/codecov-action@v1
        if: ${{ matrix.env.CCOV }}
        with:
          files: ${{ env.BASEDIR }}/coverage.info
      - name: prepare target_ws for cache
        if: ${{ always() && ! matrix.env.CCOV }}
        run: |
          du -sh ${{ env.BASEDIR }}/target_ws
          sudo find ${{ env.BASEDIR }}/target_ws -wholename '*/test_results/*' -delete
          sudo rm -rf ${{ env.BASEDIR }}/target_ws/src
          du -sh ${{ env.BASEDIR }}/target_ws
